"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _InMemory = _interopRequireDefault(require("../../CountCache/InMemory"));

/**
Copyright 2016 Split Software

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
**/
(0, _tapeCatch.default)('COUNT CACHE IN MEMORY / should count metric names incrementatly', function (assert) {
  var cache = new _InMemory.default();
  cache.track('counted-metric-one');
  cache.track('counted-metric-one');
  cache.track('counted-metric-two');
  var state = cache.state();
  assert.equal(state['counted-metric-one'], 2);
  assert.equal(state['counted-metric-two'], 1);
  assert.end();
});
(0, _tapeCatch.default)('COUNT CACHE IN MEMORY / should support custom toJSON method', function (assert) {
  var cache = new _InMemory.default();
  var hooked = JSON.stringify(cache);
  var manual = JSON.stringify(cache.state());
  assert.true(hooked === manual, 'toJSON should expose the counters as an array of numbers');
  assert.end();
});