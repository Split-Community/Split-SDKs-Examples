import { ISegmentsCacheSync } from '../../../storages/types';
import { Backoff } from '../../../utils/Backoff';
import { ISegmentsSyncTask } from '../../polling/types';
import { ISegmentUpdateData } from '../SSEHandler/types';
import { IUpdateWorker } from './types';
/**
 * SegmentUpdateWorker class
 */
export declare class SegmentsUpdateWorker implements IUpdateWorker {
    private readonly segmentsCache;
    private readonly segmentsSyncTask;
    private readonly maxChangeNumbers;
    private handleNewEvent;
    readonly backoff: Backoff;
    /**
     * @param {Object} segmentsCache segments data cache
     * @param {Object} segmentsSyncTask task for syncing segments data
     */
    constructor(segmentsSyncTask: ISegmentsSyncTask, segmentsCache: ISegmentsCacheSync);
    __handleSegmentUpdateCall(): void;
    /**
     * Invoked by NotificationProcessor on SEGMENT_UPDATE event
     *
     * @param {number} changeNumber change number of the SEGMENT_UPDATE notification
     * @param {string} segmentName segment name of the SEGMENT_UPDATE notification
     */
    put({ changeNumber, segmentName }: ISegmentUpdateData): void;
}
