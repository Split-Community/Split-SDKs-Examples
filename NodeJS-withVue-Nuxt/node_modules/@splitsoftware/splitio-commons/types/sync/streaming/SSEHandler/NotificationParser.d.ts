import { INotificationMessage, INotificationError } from './types';
/**
 * Parses the `data` JSON string, if exists, of a given SSE error notifications.
 * HTTP errors handled by Ably (e.g., 400 due to invalid token, 401 due to expired token, 500) have the `data` property.
 * Other network and HTTP errors do not have this property.
 *
 * @param {Object} error
 * @throws {SyntaxError} if `error.data` is an invalid JSON string
 */
export declare function errorParser(error: Event): INotificationError;
/**
 * Parses the `data` JSON string of a given SSE message notifications.
 * Also assigns the type OCCUPANCY, if it corresponds, so that all supported messages (e.g., SPLIT_UPDATE, CONTROL) have a type.
 *
 * @param message
 * @returns parsed notification message or undefined if the given event data is falsy (e.g, '' or undefined).
 * For example, the EventSource implementation of React-Native for iOS emits a message event with empty data for Ably keepalive comments.
 * @throws {SyntaxError} if `message.data` or `JSON.parse(message.data).data` are invalid JSON strings
 */
export declare function messageParser(message: MessageEvent): INotificationMessage | undefined;
