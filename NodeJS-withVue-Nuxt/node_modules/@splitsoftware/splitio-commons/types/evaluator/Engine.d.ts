import { ISplit, MaybeThenable } from '../dtos/types';
import { SplitIO } from '../types';
import { IStorageAsync, IStorageSync } from '../storages/types';
import { IEvaluationResult, IEvaluator, ISplitEvaluator } from './types';
import { ILogger } from '../logger/types';
export declare class Engine {
    private baseInfo;
    private evaluator;
    constructor(baseInfo: ISplit, evaluator: IEvaluator);
    static parse(log: ILogger, splitFlatStructure: ISplit, storage: IStorageSync | IStorageAsync): Engine;
    getKey(): string;
    getTreatment(key: SplitIO.SplitKey, attributes: SplitIO.Attributes | undefined, splitEvaluator: ISplitEvaluator): MaybeThenable<IEvaluationResult>;
    isGarbage(): boolean;
    getChangeNumber(): number;
}
