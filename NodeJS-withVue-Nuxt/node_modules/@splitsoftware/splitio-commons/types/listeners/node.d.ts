import { ISignalListener } from './types';
import { ISettings } from '../types';
import { ISyncManager } from '../sync/types';
/**
 * We'll listen for SIGTERM since it's the standard signal for server shutdown.
 *
 * If you're stopping the execution yourself via the keyboard, or by calling process.exit,
 * you should call the cleanup logic yourself, since we cannot ensure the data is sent after
 * the process is already exiting.
 */
export declare class NodeSignalListener implements ISignalListener {
    private handler;
    private settings;
    constructor(syncManager: ISyncManager | undefined, // private handler: () => MaybeThenable<void>,
    settings: ISettings);
    start(): void;
    stop(): void;
    /**
     * Call the handler, clean up listeners and emit the signal again.
     */
    private _sigtermHandler;
}
