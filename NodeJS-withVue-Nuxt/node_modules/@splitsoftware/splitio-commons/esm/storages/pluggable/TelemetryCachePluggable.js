import { findLatencyIndex } from '../findLatencyIndex';
var TelemetryCachePluggable = /** @class */ (function () {
    /**
     * Create a Telemetry cache that uses a storage wrapper.
     * @param log  Logger instance.
     * @param keys  Key builder.
     * @param wrapper  Adapted wrapper storage.
     */
    function TelemetryCachePluggable(log, keys, wrapper) {
        this.log = log;
        this.keys = keys;
        this.wrapper = wrapper;
    }
    TelemetryCachePluggable.prototype.recordLatency = function (method, latencyMs) {
        return this.wrapper.incr(this.keys.buildLatencyKey(method, findLatencyIndex(latencyMs)))
            .catch(function () { });
    };
    TelemetryCachePluggable.prototype.recordException = function (method) {
        return this.wrapper.incr(this.keys.buildExceptionKey(method))
            .catch(function () { });
    };
    return TelemetryCachePluggable;
}());
export { TelemetryCachePluggable };
