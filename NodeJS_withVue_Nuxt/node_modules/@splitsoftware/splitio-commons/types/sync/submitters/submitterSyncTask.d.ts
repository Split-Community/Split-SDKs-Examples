import { ISyncTask, ITimeTracker } from '../types';
import { IRecorderCacheProducerSync } from '../../storages/types';
import { ILogger } from '../../logger/types';
import { IResponse } from '../../services/types';
/**
 * Base function to create submitter sync tasks, such as ImpressionsSyncTask and EventsSyncTask
 */
export declare function submitterSyncTaskFactory<TState extends {
    length?: number;
}>(log: ILogger, postClient: (body: string) => Promise<IResponse>, sourceCache: IRecorderCacheProducerSync<TState>, postRate: number, dataName: string, latencyTracker?: ITimeTracker, fromCacheToPayload?: (cacheData: TState) => any, maxRetries?: number, debugLogs?: boolean): ISyncTask<[], void>;
