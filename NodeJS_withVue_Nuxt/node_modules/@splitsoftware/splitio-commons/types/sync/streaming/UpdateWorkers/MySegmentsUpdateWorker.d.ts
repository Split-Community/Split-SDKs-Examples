import { ISegmentsSyncTask } from '../../polling/types';
import { Backoff } from '../../../utils/Backoff';
import { IUpdateWorker } from './types';
import { SegmentsData } from '../SSEHandler/types';
/**
 * MySegmentsUpdateWorker class
 */
export declare class MySegmentsUpdateWorker implements IUpdateWorker {
    private readonly mySegmentsSyncTask;
    private maxChangeNumber;
    private handleNewEvent;
    private segmentsData?;
    private currentChangeNumber;
    readonly backoff: Backoff;
    /**
     * @param {Object} mySegmentsSyncTask task for syncing mySegments data
     */
    constructor(mySegmentsSyncTask: ISegmentsSyncTask);
    __handleMySegmentsUpdateCall(): void;
    /**
     * Invoked by NotificationProcessor on MY_SEGMENTS_UPDATE event
     *
     * @param {number} changeNumber change number of the MY_SEGMENTS_UPDATE notification
     * @param {SegmentsData | undefined} segmentsData might be undefined
     */
    put(changeNumber: number, segmentsData?: SegmentsData): void;
}
