export declare const SECONDS_BEFORE_EXPIRATION = 600;
/**
 * emitted on SSE and Authenticate non-recoverable errors, STREAMING_DISABLED control notification and authentication with pushEnabled false
 * triggers `handleNonRetryableError` call
 */
export declare const PUSH_NONRETRYABLE_ERROR = "PUSH_NONRETRYABLE_ERROR";
/**
 * emitted on SSE and Authenticate recoverable errors
 * triggers `handleRetryableError` call
 */
export declare const PUSH_RETRYABLE_ERROR = "PUSH_RETRYABLE_ERROR";
/**
 * emitted on STREAMING_RESUMED control notification, OCCUPANCY different than 0, and SSE onopen event
 * triggers `stopPollingAndSyncAll` call
 */
export declare const PUSH_SUBSYSTEM_UP = "PUSH_SUBSYSTEM_UP";
/**
 * emitted on STREAMING_PAUSED control notification, OCCUPANCY equal to 0, PUSH_NONRETRYABLE_ERROR and PUSH_RETRYABLE_ERROR events.
 * triggers `startPolling` and `stopWorkers` calls
 */
export declare const PUSH_SUBSYSTEM_DOWN = "PUSH_SUBSYSTEM_DOWN";
export declare const MY_SEGMENTS_UPDATE = "MY_SEGMENTS_UPDATE";
export declare const MY_SEGMENTS_UPDATE_V2 = "MY_SEGMENTS_UPDATE_V2";
export declare const SEGMENT_UPDATE = "SEGMENT_UPDATE";
export declare const SPLIT_KILL = "SPLIT_KILL";
export declare const SPLIT_UPDATE = "SPLIT_UPDATE";
export declare const CONTROL = "CONTROL";
export declare const OCCUPANCY = "OCCUPANCY";
export declare enum ControlType {
    STREAMING_DISABLED = "STREAMING_DISABLED",
    STREAMING_PAUSED = "STREAMING_PAUSED",
    STREAMING_RESUMED = "STREAMING_RESUMED",
    STREAMING_RESET = "STREAMING_RESET"
}
