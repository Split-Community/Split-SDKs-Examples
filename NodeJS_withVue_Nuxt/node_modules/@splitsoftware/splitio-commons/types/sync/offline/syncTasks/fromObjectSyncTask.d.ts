import { IReadinessManager } from '../../../readiness/types';
import { ISplitsCacheSync } from '../../../storages/types';
import { ISplitsParser } from '../splitsParser/types';
import { ISyncTask } from '../../types';
import { ISettings } from '../../../types';
/**
 * Offline equivalent of `splitChangesUpdaterFactory`
 */
export declare function fromObjectUpdaterFactory(splitsParser: ISplitsParser, storage: {
    splits: ISplitsCacheSync;
}, readiness: IReadinessManager, settings: ISettings): () => Promise<boolean>;
/**
 * PollingManager in Offline mode
 */
export declare function fromObjectSyncTaskFactory(splitsParser: ISplitsParser, storage: {
    splits: ISplitsCacheSync;
}, readiness: IReadinessManager, settings: ISettings): ISyncTask<[], boolean>;
