import { ISettings, SDKMode } from '../../../types';
import { ILogger } from '../../../logger/types';
import { IStorageFactoryParams, IStorageSync } from '../../../storages/types';
export declare function __InLocalStorageMockFactory(params: IStorageFactoryParams): IStorageSync;
export declare namespace __InLocalStorageMockFactory {
    var type: import("../../../storages/types").StorageType;
}
/**
 * This function validates `settings.storage` object
 *
 * @param {any} settings config object provided by the user to initialize the sdk
 *
 * @returns {Object} valid storage factory. Default to `InMemoryStorageCSFactory` if the provided storage is invalid or not compatible with the sdk mode if mode is standalone or localhost
 *
 * @throws error if mode is consumer and the provided storage is not compatible
 */
export declare function validateStorageCS(settings: {
    log: ILogger;
    storage?: any;
    mode: SDKMode;
}): ISettings['storage'];
