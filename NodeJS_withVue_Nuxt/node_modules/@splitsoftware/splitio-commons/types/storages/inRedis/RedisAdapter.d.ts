import ioredis from 'ioredis';
import { ILogger } from '../../logger/types';
/**
 * Redis adapter on top of the library of choice (written with ioredis) for some extra control.
 */
export declare class RedisAdapter extends ioredis {
    private readonly log;
    private _options;
    private _notReadyCommandsQueue?;
    private _runningCommands;
    constructor(log: ILogger, storageSettings: Record<string, any>);
    _listenToEvents(): void;
    _setTimeoutWrappers(): void;
    _setDisconnectWrapper(): void;
    /**
     * Receives the options and returns an array of parameters for the ioredis constructor.
     * Keeping both redis setup options for backwards compatibility.
     */
    static _defineLibrarySettings(options: Record<string, any>): any[];
    /**
     * Parses the options into what we care about.
     */
    static _defineOptions({ connectionTimeout, operationTimeout, url, host, port, db, pass, tls }: Record<string, any>): object;
}
