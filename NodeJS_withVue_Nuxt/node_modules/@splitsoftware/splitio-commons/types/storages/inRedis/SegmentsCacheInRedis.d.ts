import { Redis } from 'ioredis';
import { ILogger } from '../../logger/types';
import { KeyBuilderSS } from '../KeyBuilderSS';
import { ISegmentsCacheAsync } from '../types';
export declare class SegmentsCacheInRedis implements ISegmentsCacheAsync {
    private readonly log;
    private readonly redis;
    private readonly keys;
    constructor(log: ILogger, keys: KeyBuilderSS, redis: Redis);
    addToSegment(name: string, segmentKeys: string[]): Promise<boolean>;
    removeFromSegment(name: string, segmentKeys: string[]): Promise<boolean>;
    isInSegment(name: string, key: string): Promise<boolean>;
    setChangeNumber(name: string, changeNumber: number): Promise<boolean>;
    getChangeNumber(name: string): Promise<number>;
    registerSegments(segments: string[]): Promise<boolean>;
    getRegisteredSegments(): Promise<string[]>;
    clear(): Promise<boolean>;
}
