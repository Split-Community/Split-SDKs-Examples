import { AbstractSegmentsCacheSync } from '../AbstractSegmentsCacheSync';
/**
 * Default MySegmentsCacheInMemory implementation that stores MySegments in memory.
 * Supported by all JS runtimes.
 */
export declare class MySegmentsCacheInMemory extends AbstractSegmentsCacheSync {
    private segmentCache;
    clear(): void;
    addToSegment(name: string): boolean;
    removeFromSegment(name: string): boolean;
    isInSegment(name: string): boolean;
    /**
     * Reset (update) the cached list of segments with the given list, removing and adding segments if necessary.
     * @NOTE based on the way we use segments in the browser, this way is the best option
     *
     * @param {string[]} names list of segment names
     * @returns boolean indicating if the cache was updated (i.e., given list was different from the cached one)
     */
    resetSegments(names: string[]): boolean;
    getRegisteredSegments(): string[];
    getKeysCount(): number;
}
