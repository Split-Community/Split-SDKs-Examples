import { IImpressionsCacheSync } from '../types';
import { ImpressionDTO } from '../../types';
export declare class ImpressionsCacheInMemory implements IImpressionsCacheSync {
    private onFullQueue?;
    private readonly maxQueue;
    private queue;
    /**
     *
     * @param impressionsQueueSize number of queued impressions to call onFullQueueCb.
     * Default value is 0, that means no maximum value, in case we want to avoid this being triggered.
     */
    constructor(impressionsQueueSize?: number);
    setOnFullQueueCb(cb: () => void): void;
    /**
     * Store impressions in sequential order
     */
    track(data: ImpressionDTO[]): void;
    /**
     * Clear the data stored on the cache.
     */
    clear(): void;
    /**
     * Get the collected data, used as payload for posting.
     */
    state(): ImpressionDTO[];
    /**
     * Check if the cache is empty.
     */
    isEmpty(): boolean;
}
