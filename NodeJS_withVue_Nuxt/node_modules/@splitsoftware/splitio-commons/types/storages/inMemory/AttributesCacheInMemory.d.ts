export declare class AttributesCacheInMemory {
    private attributesCache;
    /**
     * Create or update the value for the given attribute
     *
     * @param {string} attributeName attribute name
     * @param {Object} attributeValue attribute value
     * @returns {boolean} the attribute was stored
     */
    setAttribute(attributeName: string, attributeValue: Object): boolean;
    /**
     * Retrieves the value of a given attribute
     *
     * @param {string} attributeName attribute name
     * @returns {Object?} stored attribute value
     */
    getAttribute(attributeName: string): Object;
    /**
     * Create or update all the given attributes
     *
     * @param {[string, Object]} attributes attributes to create or update
     * @returns {boolean} attributes were stored
     */
    setAttributes(attributes: Record<string, Object>): boolean;
    /**
     * Retrieve the full attributes map
     *
     * @returns {Map<string, Object>} stored attributes
     */
    getAll(): Record<string, Object>;
    /**
     * Removes a given attribute from the map
     *
     * @param {string} attributeName attribute to remove
     * @returns {boolean} attribute removed
     */
    removeAttribute(attributeName: string): boolean;
    /**
     * Clears all attributes stored in the SDK
     *
     */
    clear(): boolean;
}
