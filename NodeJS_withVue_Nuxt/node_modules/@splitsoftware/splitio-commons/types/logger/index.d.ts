import { ILoggerOptions, ILogger } from './types';
import { LogLevel } from '../types';
import { IMap } from '../utils/lang/maps';
export declare const LogLevels: {
    [level: string]: LogLevel;
};
export declare function isLogLevelString(str: string): str is LogLevel;
export declare function _sprintf(format?: string, args?: any[]): string;
export declare class Logger implements ILogger {
    private options;
    private codes;
    private logLevel;
    constructor(options?: ILoggerOptions, codes?: IMap<number, string>);
    setLogLevel(logLevel: LogLevel): void;
    debug(msg: string | number, args?: any[]): void;
    info(msg: string | number, args?: any[]): void;
    warn(msg: string | number, args?: any[]): void;
    error(msg: string | number, args?: any[]): void;
    private _log;
    private _generateLogMessage;
    private _shouldLog;
}
