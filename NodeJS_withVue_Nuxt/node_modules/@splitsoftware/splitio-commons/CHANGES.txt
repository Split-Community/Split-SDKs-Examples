1.4.0 (May 24, 2022)
 - Added `scheduler.telemetryRefreshRate` property to SDK configuration, and deprecated `scheduler.metricsRefreshRate` property.
 - Updated SDK telemetry storage, metrics and updater to be more effective and send less often.
 - Bugfixing - Updated default values for `scheduler.impressionsRefreshRate` config parameter: 300s for OPTIMIZED impression mode and 60s for DEBUG impression mode.

1.3.1 (April 19, 2022)
 - Bugfixing - Added peer dependencies to avoid issues when requiring some third-party dependencies used by modules of the package (Related to issue https://github.com/splitio/javascript-client/issues/662).
 - Bugfixing - Updated `ready` method to rejects the promise with an Error object instead of a string value (Related to issue https://github.com/splitio/javascript-client/issues/654).

1.3.0 (April 6, 2022)
 - Added user consent feature to allow delaying or disabling the data tracking from SDK until user consent is explicitly granted or declined. Read more in our docs.
 - Added `scheduler.impressionsQueueSize` property to SDK configuration to limit the amount of impressions tracked in memory. Read more in our docs.
 - Added support to accept TLS configuration options to the Redis storage in NodeJS. Read more in our docs.
 - Updated format for MySegments keys in LocalStorage, keeping backwards compatibility (issue https://github.com/splitio/javascript-client/issues/638).
 - Updated some modules due to general polishing and refactors, including updates in some log messages.
 - Updated some dependencies for vulnerability fixes.
 - Bugfixing - Updated internal isObject utility function, to avoid unexpected behaviors on frameworks and libraries that uses multiple VM contexts, like NuxtJS dev server.
 - Bugfixing - Fixed validation of `core.key` SDK configuration param, to parse it into a string and log a warning when passing a number (Related to issue https://github.com/splitio/react-native-client/issues/19).
 - Bugfixing - Fixed validation of `sync.impressionsMode` SDK configuration param, to avoid an exception on SplitFactory instantiation when passing a non-string value.
 - Bugfixing - Fixed an issue with `connectionTimeout` options params of Redis storage, that was being ignored and not passed down to the underlying ioredis client.
 - Bugfixing - Fixed streaming synchronization issue with multiple clients.
 - Bugfixing - Fixed issue with internal Map ponyfill that results in logger not working properly on IE11 browser.

1.2.0 (January 19, 2022)
 - Added support to SDK clients on browser to optionally bind attributes to the client, keeping these loaded within the SDK along with the user ID, for easier usage when requesting flag.

1.1.0 (January 11, 2022)
 - Added support for the SDK to run in "consumer" and "partial consumer" modes, with a pluggable implementation of it's internal storage, enabling
  customers to implement this caching with any storage technology of choice and connect it to the SDK instance to be used instead of its default in-memory storage.
 - Updated multiple modules due to general polishing and improvements, including the replacement of default exports with named exports, to avoid runtime errors with some particular configurations of Webpack projects.
 - Updated ioredis dependency for vulnerability fixes.
 - Bugfixing - Fixed issue returning dynamic configs if treatment name contains a dot (".").

1.0.0 (October 20, 2021)
 - BREAKING CHANGE on multiple modules due to general polishing, improvements and bug fixes. In most cases the change is to use named exports. This affected mostly modules related with synchronization and storages.
 - Updated streaming logic to use the newest version of our streaming service, including:
   - Integration with Auth service V2, connecting to the new channels and applying the received connection delay.
   - Implemented handling of the new MySegmentsV2 notification types (SegmentRemoval, KeyList, Bounded and Unbounded)
   - New control notification for environment scoped streaming reset.
 - Updated localhost mode to emit SDK_READY_FROM_CACHE event in Browser when using localStorage (Related to issue https://github.com/splitio/react-client/issues/34).
 - Updated dependencies for vulnerability fixes.

0.1.0 (March 30, 2021)
 - Initial public release. It includes common modules to be consumed by the different Split implementations written in JavaScript. Based on the original JS SDK in the `javascript-client` repository.
 - It's designed with a modular approach, with the following goals in mind:
   - Dependents should be able to include the modules that are needed for, as an example, a storage.
   - Dependents should be able to use the module that's specific for their runtime environment, allowing for better usage of native APIs as well as to build optimizations targeted by each platform.
   - Size reduction should be applicable when possible.
   - Design should be extensible, specially for modules that act as an orchestrator.
   - Code reusability.
