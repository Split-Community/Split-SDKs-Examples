"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _Errors = require("../../lang/Errors");

(0, _tapeCatch.default)('Language utils / Errors', function (assert) {
  var splitErrorInst = new _Errors.SplitError(); // This one should not be used directly, so only testing default message

  var splitNetErrorInst = new _Errors.SplitNetworkError();
  var splitTimeErrorInst = new _Errors.SplitTimeoutError();
  assert.equal(splitErrorInst.message, 'Split Error', 'The errors should have a default message.');
  assert.equal(splitNetErrorInst.message, 'Split Network Error', 'The errors should have a default message.');
  assert.equal(splitTimeErrorInst.message, 'Split Timeout Error', 'The errors should have a default message.');
  splitNetErrorInst = new _Errors.SplitNetworkError('NETWORK_ERR', 341);
  assert.equal(splitNetErrorInst.message, 'NETWORK_ERR', 'Split Network Error should store params (message) correctly');
  assert.equal(splitNetErrorInst.statusCode, 341, 'Split Network Error should store params (status code) correctly');
  assert.true(splitNetErrorInst instanceof _Errors.SplitError, 'All custom errors should extend from the root one');
  assert.true(splitNetErrorInst instanceof Error, 'All custom errors should extend from the native one.');
  splitTimeErrorInst = new _Errors.SplitTimeoutError('TIMEOUT_ERR');
  assert.equal(splitTimeErrorInst.message, 'TIMEOUT_ERR', 'Split Network Error should store params (message) correctly');
  assert.true(splitTimeErrorInst instanceof _Errors.SplitError, 'All custom errors should extend from the root one.');
  assert.true(splitTimeErrorInst instanceof Error, 'All custom errors should extend from the native one.');
  assert.end();
});