"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _fetchMock = _interopRequireDefault(require("../testUtils/fetchMock"));

var _pushInitializationNopush = require("../browserSuites/push-initialization-nopush.spec");

var _pushInitializationRetries = require("../browserSuites/push-initialization-retries.spec");

var _pushSynchronization = require("../browserSuites/push-synchronization.spec");

var _pushSynchronizationRetries = require("../browserSuites/push-synchronization-retries.spec");

var _pushFallbacking = require("../browserSuites/push-fallbacking.spec");

var _pushRefreshToken = require("../browserSuites/push-refresh-token.spec");

_fetchMock.default.config.overwriteRoutes = false;
(0, _tapeCatch.default)('## Browser JS - E2E CI Tests for PUSH ##', function (assert) {
  assert.test('E2E / PUSH initialization: auth with push disabled', _pushInitializationNopush.testAuthWithPushDisabled.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH initialization: auth with 401', _pushInitializationNopush.testAuthWith401.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH initialization: fallback to polling if EventSource is not available', _pushInitializationNopush.testNoEventSource.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH initialization: fallback to polling if EventSource is not available', _pushInitializationNopush.testNoBase64Support.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH initialization: auth failures and then success', _pushInitializationRetries.testAuthRetries.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH initialization: SSE connection failures and then success', _pushInitializationRetries.testSSERetries.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH disconnection: SDK destroyed while authenticating', _pushInitializationRetries.testSdkDestroyWhileAuthSuccess.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH disconnection: SDK destroyed while auth was retrying', _pushInitializationRetries.testSdkDestroyWhileAuthRetries.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH synchronization: happy paths', _pushSynchronization.testSynchronization.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH synchronization: retries', _pushSynchronizationRetries.testSynchronizationRetries.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH fallbacking', _pushFallbacking.testFallbacking.bind(null, _fetchMock.default));
  assert.test('E2E / PUSH refresh token', _pushRefreshToken.testRefreshToken.bind(null, _fetchMock.default));
  assert.end();
});