"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _fetchMock = _interopRequireDefault(require("../testUtils/fetchMock"));

var _gaToSplit = _interopRequireDefault(require("./ga-to-split.spec"));

var _splitToGa = _interopRequireDefault(require("./split-to-ga.spec"));

var _bothIntegrations = _interopRequireDefault(require("./both-integrations.spec"));

var _settings = _interopRequireDefault(require("../../utils/settings"));

var _splitchangesSince = _interopRequireDefault(require("../mocks/splitchanges.since.-1.json"));

var _mysegmentsFacundoSplitIo = _interopRequireDefault(require("../mocks/mysegments.facundo@split.io.json"));

var settings = (0, _settings.default)({
  core: {
    key: 'facundo@split.io'
  }
});
(0, _tapeCatch.default)('## E2E CI Tests ##', function (assert) {
  _fetchMock.default.get(settings.url('/splitChanges?since=-1'), {
    status: 200,
    body: _splitchangesSince.default
  });

  _fetchMock.default.get(settings.url('/mySegments/facundo%40split.io'), {
    status: 200,
    body: _mysegmentsFacundoSplitIo.default
  });
  /* Validate GA integration */


  assert.test('E2E / GA-to-Split', _gaToSplit.default.bind(null, _fetchMock.default));
  assert.test('E2E / Split-to-GA', _splitToGa.default.bind(null, _fetchMock.default));
  assert.test('E2E / Both GA integrations', _bothIntegrations.default.bind(null, _fetchMock.default));
  assert.end();
});