"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _tapeCatch = _interopRequireDefault(require("tape-catch"));

var _InLocalStorage = _interopRequireDefault(require("../../../SegmentCache/InLocalStorage"));

var _Keys = _interopRequireDefault(require("../../../Keys"));

var _settings = _interopRequireDefault(require("../../../../utils/settings"));

var settings = (0, _settings.default)({});
(0, _tapeCatch.default)('SEGMENT CACHE / in LocalStorage', function (assert) {
  var keys = new _Keys.default(settings);
  var cache = new _InLocalStorage.default(keys);
  cache.flush();
  cache.addToSegment('mocked-segment');
  assert.ok(cache.isInSegment('mocked-segment') === true);
  cache.removeFromSegment('mocked-segment');
  assert.ok(cache.isInSegment('mocked-segment') === false);
  assert.end();
});